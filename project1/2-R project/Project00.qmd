---
title: "CSV Data Analysis in R - project00- dataset HR-attrition"
format: pdf
editor: visual
---

```{r}

setwd("/Users/sinapc/Desktop/Aidapt/project00/2-R project")
options(repos = c(CRAN = "https://cloud.r-project.org/"))

install.packages("tidyverse")
install.packages("summarytools")
install.packages("knitr")
install.packages("corrplot")
```

```{r}
library(tidyverse)
library(summarytools)
library(knitr)

data <- read_csv("original.csv")
```

```{r}
#dim(data)
#head(data, 10)
glimpse(data)
#str(data)
summary(data) #descriptive statistics
#names(data)

```

```{r}
# categorical value check with Knitr:Kable frames

data %>% distinct(Attrition) %>% kable()
data %>% distinct(BusinessTravel) %>% kable()
data %>% distinct(Department) %>% kable()
data %>% distinct(Education) %>% kable()
data %>% distinct(EducationField) %>% kable()
data %>% distinct(EmployeeCount) %>% kable()
data %>% distinct(Gender) %>% kable()
data %>% distinct(JobRole) %>% kable()
data %>% distinct(MaritalStatus) %>% kable()
data %>% distinct(Over18) %>% kable()
data %>% distinct(OverTime) %>% kable()
data %>% distinct(PerformanceRating) %>% kable()
data %>% distinct(StandardHours) %>% kable()
```

```{r}
#missing value check
colSums(is.na(data))
#comprehensive overveiw of data from package
dfSummary(data)
```

```{r}
#mean(data$MonthlyIncome, na.rm = TRUE)

# Summary of all numeric columns
summary_table <- data %>%
  summarise(across(where(is.numeric),list(mean = mean,median = median, sd = sd), na.rm = TRUE))
```

```{r}

# write a summary table in format_csv()
summary_table %>%
  summarise(across(where(is.numeric), list(mean = mean,median = median, sd = sd), na.rm = TRUE))

write_csv(summary_table, "summary_table.csv")
```

```{r}
# Attrition rate by Job Role
data %>%
  group_by(JobRole, Attrition) %>%
  summarise(Count = n()) %>%
  mutate(Percent = round(Count / sum(Count) * 100, 1))
```

```{r}
# Select numeric variables
num_data <- data %>% select(where(is.numeric))

# Correlation matrix
cor_matrix <- cor(num_data)
round(cor_matrix, 2)
```

```{r}
ggplot(data, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
theme_minimal()
```

```{r}
ggplot(data, aes(x = Attrition, y = MonthlyIncome)) +
geom_boxplot(fill = "salmon") +
theme_minimal()
```

```{r}
ggplot(data, aes(x = Attrition, y = MonthlyIncome)) +
geom_boxplot(fill = "salmon") +
theme_minimal()
```

```{r}
ggplot(data, aes(x = JobRole, fill = Attrition)) +
geom_bar(position = "fill") +
coord_flip() +
labs(y = "Proportion") +
theme_minimal()
```

```{r}
library(corrplot)
corrplot(cor_matrix, method = "color", type = "lower", tl.cex = 0.6)
```

```{r}
# Convert Attrition to binary
data$Attrition <- ifelse(data$Attrition == "Yes", 1, 0)

# Basic model
model <- glm(Attrition ~ Age + JobRole + MonthlyIncome + OverTime + YearsAtCompany, 
data = data, family = "binomial")

summary(model)
```

```{r}
# Calculate attrition percentages by BusinessTravel
attrition_by_businesstravel <- data %>%
  group_by(BusinessTravel, Attrition) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(BusinessTravel) %>%
  mutate(Percentage = round(Count / sum(Count) * 100, 1))

# Display table
attrition_by_businesstravel %>% kable()

# Visualize attrition by BusinessTravel
ggplot(attrition_by_businesstravel, aes(x = BusinessTravel, y = Percentage, fill = Attrition)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "Attrition Percentage by Business Travel",
       x = "Business Travel",
       y = "Percentage (%)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), # Rotate labels for readability
        plot.title = element_text(hjust = 0.5))

```

```{r}
# Calculate attrition percentages by Department
attrition_by_department <- data %>%
  group_by(Department, Attrition) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(Department) %>%
  mutate(Percentage = round(Count / sum(Count) * 100, 1))

# Display table
attrition_by_department %>% kable()

# Visualize attrition by Department
ggplot(attrition_by_department, aes(x = Department, y = Percentage, fill = Attrition)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "Attrition Percentage by Department",
       x = "Department",
       y = "Percentage (%)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5))
```

```{r}
# Calculate attrition percentages by EducationField
attrition_by_educationfield <- data %>%
  group_by(EducationField, Attrition) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(EducationField) %>%
  mutate(Percentage = round(Count / sum(Count) * 100, 1))

# Display table
attrition_by_educationfield %>% kable()

# Visualize attrition by EducationField
ggplot(attrition_by_educationfield, aes(x = EducationField, y = Percentage, fill = Attrition)) +
  geom_bar(stat = "identity", position = "stack") +
  coord_flip() + # Flip coordinates for better readability
  labs(title = "Attrition Percentage by Education Field",
       x = "Education Field",
       y = "Percentage (%)") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}

#Calculate attrition percentages by Gender
attrition_by_gender <- data %>%
group_by(Gender, Attrition) %>%
summarise(Count = n(), .groups = 'drop') %>%
group_by(Gender) %>%
mutate(Percentage = round(Count / sum(Count) * 100, 1))

# Display table
attrition_by_gender %>% kable()

# Visualize attrition by Gender
ggplot(attrition_by_gender, aes(x = Gender, y = Percentage, fill = Attrition)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Attrition Percentage by Gender",
x = "Gender",
y = "Percentage (%)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
```
```{r}
# Calculate attrition percentages by MaritalStatus}
attrition_by_maritalstatus <- data %>%
  group_by(MaritalStatus, Attrition) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(MaritalStatus) %>%
  mutate(Percentage = round(Count / sum(Count) * 100, 1))

# Display table
attrition_by_maritalstatus %>% kable()

# Visualize attrition by MaritalStatus
ggplot(attrition_by_maritalstatus, aes(x = MaritalStatus, y = Percentage, fill = Attrition)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "Attrition Percentage by Marital Status",
       x = "Marital Status",
       y = "Percentage (%)") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

```

```{r}
# Calculate attrition percentages by OverTime
attrition_by_overtime <- data %>%
  group_by(OverTime, Attrition) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(OverTime) %>%
  mutate(Percentage = round(Count / sum(Count) * 100, 1))

# Display table
attrition_by_overtime %>% kable()

# Visualize attrition by OverTime
ggplot(attrition_by_overtime, aes(x = OverTime, y = Percentage, fill = Attrition)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "Attrition Percentage by OverTime",
       x = "OverTime",
       y = "Percentage (%)") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}

```

```{r}

```